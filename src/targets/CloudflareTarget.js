import BaseTarget from "./BaseTarget.js";

let CLOUDFLARE_STUB=`
//
// This file is automatically generated.
//
// Don't edit this file!
//

import * as mod from "$ENTRYPOINT";
import {MikrokatServer} from "mikrokat";

let server=new MikrokatServer({mod: mod});

addEventListener("fetch", ev=>{
	ev.respondWith(server.handleRequest({
		request: ev.request
	}));
});
`;

/*
		let entrypointAbs=path.resolve(entrypoint);
		let base=entrypointAbs.substr(0,entrypointAbs.lastIndexOf("."));
		let ext=entrypointAbs.substr(entrypointAbs.lastIndexOf("."));
		let outfileAbs=base+"."+options.target+ext;
		if (options.outfile)
			outfileAbs=path.resolve(options.outfile)

		let stub=fs.readFileSync(path.join(__dirname,"/../stubs/",options.target+".stub.js"),"utf8");

		stub=stub.replaceAll("$ENTRYPOINT","./"+path.relative(path.dirname(outfileAbs),entrypointAbs));
		fs.writeFileSync(outfileAbs,stub);

		console.log("Wrote: "+outfileAbs)
*/

export default class CloudflareTarget extends BaseTarget {
	constructor(arg) {
		super(arg);
	}

	async build() {
		let entrypointAbs=await this.cli.getAbsoluteEntrypoint();
		console.log(entrypointAbs);
	}
}