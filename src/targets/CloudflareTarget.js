import BaseTarget from "./BaseTarget.js";
import packageVersions from "../cli/package-versions.js";

let CLOUDFLARE_STUB=`
//
// This file is automatically generated.
//
// Don't edit this file!
//

import * as mod from "$ENTRYPOINT";
import {MikrokatServer} from "mikrokat";

$SERVICEIMPORTS

let serviceClasses=$SERVICECLASSES;
let services=$SERVICES;
let serverMap=new Map();

export default {
	async fetch(request, env, ctx) {
		if (!serverMap.get(env)) {
			serverMap.set(env,new MikrokatServer({
				target: "cloudflare",
				mod, 
				env,
				serviceClasses,
				services
			}));
		}

		let server=serverMap.get(env);
		return await server.handleRequest({request,ctx});
	}
}
`;

export default class CloudflareTarget extends BaseTarget {
	constructor(arg) {
		super(arg);
	}

	async build() {
		await this.cli.writeStub(".target/entrypoint.cloudflare.js",CLOUDFLARE_STUB);
	}

	async init() {
		let pkg=await this.cli.processProjectFile("package.json","json",async pkg=>{
			if (!pkg.scripts) pkg.scripts={};
			if (!pkg.scripts["dev:cloudflare"])
				pkg.scripts["dev:cloudflare"]="wrangler dev";

			if (!pkg.scripts["deploy:cloudflare"])
				pkg.scripts["deploy:cloudflare"]="wrangler deploy";

			if (!pkg.dependencies) pkg.dependencies={};
			pkg.dependencies.wrangler="^"+packageVersions.wrangler;
		});

		await this.cli.processProjectFile("wrangler.json","json",async wrangler=>{
			if (!wrangler) wrangler={};
			wrangler.main=".target/entrypoint.cloudflare.js";

			if (!wrangler.name)
				wrangler.name=pkg.name;

			if (!wrangler.build) wrangler.build={};
			wrangler.build.command="TARGET=cloudflare npm run build";

			if (!wrangler.compatibility_date)
				wrangler.compatibility_date=new Date().toISOString().slice(0, 10);

			return wrangler;
		});

		await this.cli.processProjectFile(".gitignore","lines",async ignore=>{
			if (!ignore.includes(".target")) ignore.push(".target");
			if (!ignore.includes(".wrangler")) ignore.push(".wrangler");
		});

		this.cli.log("Cloudflare initialized. Start a dev server with:");
		this.cli.log();
		this.cli.log("  npm run dev:cloudflare");
		this.cli.log();
		this.cli.log("Deploy with:");
		this.cli.log();
		this.cli.log("  npm run deploy:cloudflare");
		this.cli.log();
	}
}