import BaseTarget from "./BaseTarget.js";

let FASTLY_STUB=`
//
// This file is automatically generated.
//
// Don't edit this file!
//

import * as mod from "$ENTRYPOINT";
import {MikrokatServer} from "mikrokat";

let server=new MikrokatServer({mod: mod});

addEventListener("fetch", ev=>{
	ev.respondWith(server.handleRequest({
		request: ev.request
	}));
});
`;

let FASTLY_TOML_STUB=`
name="$NAME"
language="javascript"

[scripts]
  build="TARGET=fastly npx mikrokat build && npx js-compute-runtime .target/entrypoint.fastly.js ./bin/main.wasm"
`

export default class FastlyTarget extends BaseTarget {
	constructor(arg) {
		super(arg);
	}

	async build() {
		await this.cli.writeStub(".target/entrypoint.fastly.js",FASTLY_STUB);
	}

	async init() {
		let name;
		await this.cli.updateJsonConfig("package.json",async pkg=>{
			name=pkg.name;
			return pkg;
		});

		let stub=FASTLY_TOML_STUB.replaceAll("$NAME",name);
		await this.cli.initFile("fastly.toml",stub);

		await this.cli.updateLineArrayConfig(".gitignore",async lines=>{
			if (!lines.includes("bin")) lines.push("bin");
			if (!lines.includes("pkg")) lines.push("pkg");
			return lines;
		});

		console.log("Fastly initialized. Start a dev server with:");
		console.log();
		console.log("  fastly compute serve");
		console.log();
	}
}